# start of test: serial datatype test
{"resource":"credentials","action":"create","credentialId":"test"}
# ---- Testing CRUD operations ----
{"resource":"session","action":"create","sessionId":"testCRUD","className":"com.informix.jdbc.IfxDriver"}
# creating table
{"resource":"statement","action":"execute","statementId":"ddl","sql":"DROP TABLE IF EXISTS serial_test"}
{"resource":"statement","action":"execute","statementId":"ddl","sql":"CREATE TABLE serial_test (i0 SERIAL)"}
{"resource":"statement","action":"close","statementId":"ddl"}
# insert row
{"resource":"preparedStatement","action":"create","statementId":"insert","sql":"INSERT INTO serial_test VALUES (?)"}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":82}]}
# query for row
{"resource":"preparedStatement","action":"create","statementId":"query","sql":"SELECT * FROM serial_test WHERE i0 = ? "}
{"resource":"preparedStatement","action":"execute","statementId":"query","bindings":[{"index":1,"type":"SERIAL","value":82}],"expectedResults":[{"i0":82}]}
# updates not supported on this datatype... skipping update
# delete row
{"resource":"preparedStatement","action":"create","statementId":"delete","sql":"DELETE FROM serial_test WHERE i0 = ?"}
{"resource":"preparedStatement","action":"execute","statementId":"delete","bindings":[{"index":1,"type":"SERIAL","value":82}]}
# query for deleted row
{"resource":"preparedStatement","action":"execute","statementId":"query","bindings":[{"index":1,"type":"SERIAL","value":143}],"expectedResults":[]}
# dropping table
{"resource":"statement","action":"execute","statementId":"ddl","sql":"DROP TABLE IF EXISTS serial_test"}
{"resource":"statement","action":"close","statementId":"ddl"}
# ---- Testing query and insert prepared statement reuse ----
{"resource":"session","action":"create","sessionId":"testPstmt","className":"com.informix.jdbc.IfxDriver"}
# creating table
{"resource":"statement","action":"execute","statementId":"ddl","sql":"DROP TABLE IF EXISTS serial_test"}
{"resource":"statement","action":"execute","statementId":"ddl","sql":"CREATE TABLE serial_test (id SERIAL,value VARCHAR(20))"}
{"resource":"statement","action":"close","statementId":"ddl"}
# inserting data
{"resource":"preparedStatement","action":"create","statementId":"insert","sql":"INSERT INTO serial_test VALUES (?,?)"}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":0},{"index":2,"type":"VARCHAR","value":"Montana"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":1},{"index":2,"type":"VARCHAR","value":"Nebraska"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":2},{"index":2,"type":"VARCHAR","value":"Nevada"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":3},{"index":2,"type":"VARCHAR","value":"New Hampshire"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":4},{"index":2,"type":"VARCHAR","value":"New Jersey"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":5},{"index":2,"type":"VARCHAR","value":"New Meixco"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":6},{"index":2,"type":"VARCHAR","value":"New York"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":7},{"index":2,"type":"VARCHAR","value":"North Carolina"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":8},{"index":2,"type":"VARCHAR","value":"North Dakota"}]}
{"resource":"preparedStatement","action":"execute","statementId":"insert","bindings":[{"index":1,"type":"SERIAL","value":9},{"index":2,"type":"VARCHAR","value":"Ohio"}]}
{"resource":"preparedStatement","action":"close","statementId":"insert"}
# running equality query and validating data
{"resource":"preparedStatement","action":"create","statementId":"query","sql":"SELECT * FROM serial_test WHERE id = ? "}
{"resource":"preparedStatement","action":"execute","statementId":"query","bindings":[{"index":1,"type":"SERIAL","value":10}],"expectedResults":[]}
{"resource":"preparedStatement","action":"execute","statementId":"query","bindings":[{"index":1,"type":"SERIAL","value":12}],"expectedResults":[]}
{"resource":"preparedStatement","action":"execute","statementId":"query","bindings":[{"index":1,"type":"SERIAL","value":14}],"expectedResults":[]}
{"resource":"preparedStatement","action":"close","statementId":"query"}
# dropping table
{"resource":"statement","action":"execute","statementId":"ddl","sql":"DROP TABLE IF EXISTS serial_test"}
{"resource":"statement","action":"close","statementId":"ddl"}
# end of test: serial datatype test
